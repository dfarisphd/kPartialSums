##==+====1====+====2====+====3====+====4====+====5====+====6====+====7====+====8
## FILE-NAME: [["logs/KPartialSums-BCIAlgorithm.log"]]
## [[ David Faris :: 2017-08-27 ]]
## Copyright (C) 2017 by David W. Faris, PhD
## This original code is placed into the public domain
##==+====1====+====2====+====3====+====4====+====5====+====6====+====7====+====8

Logfiles and Output Results: Simple Test Cases, Debugging, Etc

I use C/Cxx "SPDLOG" Library for Log4J-like functionality under C++11.

##==+====1====+====2====+====3====+====4====+====5====+====6====+====7====+====8

## EXAMPLE 1:
[2017-08-29 08:20:22.464] [console1] [info] *** INPUT: [[ 5 , 5 , 15 , 10 ]]
[2017-08-29 08:20:22.464] [console1] [info] ***    targetSum: [[ 15 ]]
[2017-08-29 08:20:22.464] [console1] [info] ***    maxNum permutations (!): [[ 16 ]]

## these solutions to Example 1 (expressed below) are in BCI: { 4 , 9 , 10 }
## are in fact BCI Integers: Binary Coded Indices ...
##    * Express each number in binary (Right/LSB-to-Left/MSB) and the "1/set" bits
##    * will align with the ZERO-Based Indices (also going from Right-to-Left).
##    * One must be very very careful with INDEX RANGE and RHS/LHS.

[2017-08-29 08:20:22.464] [console1] [info] *** [[ K-PARTIAL-SUMS ( kPartialSums() ) ]] ***  CORE ALGORITHM DONE
[2017-08-29 08:20:22.464] [console1] [info] ***    NUMBER OF MATCHES (targetSum matched in InputArray): [[ 3 ]]
[2017-08-29 08:20:22.464] [console1] [info] ***    ALL MATCHES: [[ 4 , 9 , 10 ]]
[2017-08-29 08:20:22.464] [console1] [info] *** [[ K-PARTIAL-SUMS ( kPartialSums() ) ]] ***  CORE ALGORITHM DONE

## SOLUTIONS:
[2017-08-29 08:20:22.464] [console] [info] BCI-VAL = [[  4 ]]  -->>  Array Index Values: [[ 2 ]]
[2017-08-29 08:20:22.465] [console] [info] BCI-VAL = [[  9 ]]  -->>  Array Index Values: [[ 0 , 3 ]]
[2017-08-29 08:20:22.465] [console] [info] BCI-VAL = [[ 10 ]]  -->>  Array Index Values: [[ 1 , 3 ]]

##==+====1====+====2====+====3====+====4====+====5====+====6====+====7====+====8

[ bueller @ PRISM1 :: src ]$ ./TestMainDriver 
[2017-08-29 08:20:22.464] [console] [info] *** [[ K-PARTIAL-SUMS (TestMainDriver.cxx) ]] ***
[2017-08-29 08:20:22.464] [console] [info] CALLING "kPartialSums" ROUTINE ...
[2017-08-29 08:20:22.464] [console1] [info] ********************************************************************
[2017-08-29 08:20:22.464] [console1] [info] *** [[ K-PARTIAL-SUMS ( kPartialSums( ) ) ]] *** CORE ALGORITHM
[2017-08-29 08:20:22.464] [console1] [info] ***    targetSum: [[ 15 ]]
[2017-08-29 08:20:22.464] [console1] [info] ***    maxNum permutations (!): [[ 16 ]]
[2017-08-29 08:20:22.464] [console1] [info] *** INPUT: [[ 5 , 5 , 15 , 10 ,  ]]
[2017-08-29 08:20:22.464] [console1] [info] *** [[ K-PARTIAL-SUMS ( kPartialSums() ) ]] ***  CORE ALGORITHM DONE
[2017-08-29 08:20:22.464] [console1] [info] ***    NUMBER OF MATCHES (targetSum matched in InputArray): [[ 3 ]]
[2017-08-29 08:20:22.464] [console1] [info] ***    ALL MATCHES: [[ 4 , 9 , 10 ,  ]]
[2017-08-29 08:20:22.464] [console1] [info] *** [[ K-PARTIAL-SUMS ( kPartialSums() ) ]] ***  CORE ALGORITHM DONE
[2017-08-29 08:20:22.464] [console1] [info] ********************************************************************
[2017-08-29 08:20:22.464] [console1] [info] ### TIME//SCALABILITY BENCHMARK ONLY:  1e-05 ]]
[2017-08-29 08:20:22.464] [console1] [info] ********************************************************************
[2017-08-29 08:20:22.464] [console] [info] NUM-MATCHES -->> [[ 3 ]]
[2017-08-29 08:20:22.464] [console] [info] *** EXAMPLE 1  :: RET-VALS = [[ 4 , 9 , 10 ,  ]]
[2017-08-29 08:20:22.464] [console2] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] ***
[2017-08-29 08:20:22.464] [console2] [info] *** bciVal: [[ 4 ]]
[2017-08-29 08:20:22.464] [console2] [info] *** bitset COUNT   = [[ 1 ]]
[2017-08-29 08:20:22.464] [console2] [info] *** bitset ULLONG  = [[ 4 ]]
[2017-08-29 08:20:22.464] [console2] [info] *** bitset STRING  = [[ 0000000000000000000000000000000000000000000000000000000000000100 ]]
[2017-08-29 08:20:22.464] [console2] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] *** DONE
[2017-08-29 08:20:22.464] [console2] [info] ***    TOTAL Number of Bits Found = [[ 1 ]]
[2017-08-29 08:20:22.464] [console2] [info] ***    ARRAY INDICES FOUND = [[ 2 ,  ]]
[2017-08-29 08:20:22.464] [console2] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] *** DONE
[2017-08-29 08:20:22.464] [console] [info] BCI-VAL = [[ 4 ]]  -->>  Array Index Values: [[ 2 ,  ]]
[2017-08-29 08:20:22.465] [console3] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] ***
[2017-08-29 08:20:22.465] [console3] [info] *** bciVal: [[ 9 ]]
[2017-08-29 08:20:22.465] [console3] [info] *** bitset COUNT   = [[ 2 ]]
[2017-08-29 08:20:22.465] [console3] [info] *** bitset ULLONG  = [[ 9 ]]
[2017-08-29 08:20:22.465] [console3] [info] *** bitset STRING  = [[ 0000000000000000000000000000000000000000000000000000000000001001 ]]
[2017-08-29 08:20:22.465] [console3] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] *** DONE
[2017-08-29 08:20:22.465] [console3] [info] ***    TOTAL Number of Bits Found = [[ 2 ]]
[2017-08-29 08:20:22.465] [console3] [info] ***    ARRAY INDICES FOUND = [[ 0 , 3 ,  ]]
[2017-08-29 08:20:22.465] [console3] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] *** DONE
[2017-08-29 08:20:22.465] [console] [info] BCI-VAL = [[ 9 ]]  -->>  Array Index Values: [[ 0 , 3 ,  ]]
[2017-08-29 08:20:22.465] [console4] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] ***
[2017-08-29 08:20:22.465] [console4] [info] *** bciVal: [[ 10 ]]
[2017-08-29 08:20:22.465] [console4] [info] *** bitset COUNT   = [[ 2 ]]
[2017-08-29 08:20:22.465] [console4] [info] *** bitset ULLONG  = [[ 10 ]]
[2017-08-29 08:20:22.465] [console4] [info] *** bitset STRING  = [[ 0000000000000000000000000000000000000000000000000000000000001010 ]]
[2017-08-29 08:20:22.465] [console4] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] *** DONE
[2017-08-29 08:20:22.465] [console4] [info] ***    TOTAL Number of Bits Found = [[ 2 ]]
[2017-08-29 08:20:22.465] [console4] [info] ***    ARRAY INDICES FOUND = [[ 1 , 3 ,  ]]
[2017-08-29 08:20:22.465] [console4] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] *** DONE
[2017-08-29 08:20:22.465] [console] [info] BCI-VAL = [[ 10 ]]  -->>  Array Index Values: [[ 1 , 3 ,  ]]
[2017-08-29 08:20:22.465] [console] [info] CALLING "kPartialSums" ROUTINE ...
[2017-08-29 08:20:22.465] [console5] [info] ********************************************************************
[2017-08-29 08:20:22.465] [console5] [info] *** [[ K-PARTIAL-SUMS ( kPartialSums( ) ) ]] *** CORE ALGORITHM
[2017-08-29 08:20:22.465] [console5] [info] ***    targetSum: [[ 6 ]]
[2017-08-29 08:20:22.465] [console5] [info] ***    maxNum permutations (!): [[ 16 ]]
[2017-08-29 08:20:22.465] [console5] [info] *** INPUT: [[ 1 , 2 , 3 , 4 ,  ]]
[2017-08-29 08:20:22.465] [console5] [info] *** [[ K-PARTIAL-SUMS ( kPartialSums() ) ]] ***  CORE ALGORITHM DONE
[2017-08-29 08:20:22.465] [console5] [info] ***    NUMBER OF MATCHES (targetSum matched in InputArray): [[ 2 ]]
[2017-08-29 08:20:22.465] [console5] [info] ***    ALL MATCHES: [[ 7 , 10 ,  ]]
[2017-08-29 08:20:22.465] [console5] [info] *** [[ K-PARTIAL-SUMS ( kPartialSums() ) ]] ***  CORE ALGORITHM DONE
[2017-08-29 08:20:22.465] [console5] [info] ********************************************************************
[2017-08-29 08:20:22.465] [console5] [info] ### TIME//SCALABILITY BENCHMARK ONLY:  2e-06 ]]
[2017-08-29 08:20:22.465] [console5] [info] ********************************************************************
[2017-08-29 08:20:22.465] [console] [info] NUM-MATCHES -->> [[ 2 ]]
[2017-08-29 08:20:22.465] [console] [info] *** EXAMPLE 2  :: RET-VALS = [[ 7 , 10 ,  ]]
[2017-08-29 08:20:22.465] [console6] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] ***
[2017-08-29 08:20:22.465] [console6] [info] *** bciVal: [[ 7 ]]
[2017-08-29 08:20:22.465] [console6] [info] *** bitset COUNT   = [[ 3 ]]
[2017-08-29 08:20:22.465] [console6] [info] *** bitset ULLONG  = [[ 7 ]]
[2017-08-29 08:20:22.465] [console6] [info] *** bitset STRING  = [[ 0000000000000000000000000000000000000000000000000000000000000111 ]]
[2017-08-29 08:20:22.465] [console6] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] *** DONE
[2017-08-29 08:20:22.465] [console6] [info] ***    TOTAL Number of Bits Found = [[ 3 ]]
[2017-08-29 08:20:22.465] [console6] [info] ***    ARRAY INDICES FOUND = [[ 0 , 1 , 2 ,  ]]
[2017-08-29 08:20:22.465] [console6] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] *** DONE
[2017-08-29 08:20:22.465] [console] [info] BCI-VAL = [[ 7 ]]  -->>  Array Index Values: [[ 0 , 1 , 2 ,  ]]
[2017-08-29 08:20:22.465] [console7] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] ***
[2017-08-29 08:20:22.465] [console7] [info] *** bciVal: [[ 10 ]]
[2017-08-29 08:20:22.465] [console7] [info] *** bitset COUNT   = [[ 2 ]]
[2017-08-29 08:20:22.465] [console7] [info] *** bitset ULLONG  = [[ 10 ]]
[2017-08-29 08:20:22.465] [console7] [info] *** bitset STRING  = [[ 0000000000000000000000000000000000000000000000000000000000001010 ]]
[2017-08-29 08:20:22.465] [console7] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] *** DONE
[2017-08-29 08:20:22.465] [console7] [info] ***    TOTAL Number of Bits Found = [[ 2 ]]
[2017-08-29 08:20:22.465] [console7] [info] ***    ARRAY INDICES FOUND = [[ 1 , 3 ,  ]]
[2017-08-29 08:20:22.465] [console7] [info] *** [[ K-PARTIAL-SUMS (decodeBCItoIndexValues) ]] *** DONE
[2017-08-29 08:20:22.465] [console] [info] BCI-VAL = [[ 10 ]]  -->>  Array Index Values: [[ 1 , 3 ,  ]]
[2017-08-29 08:20:22.465] [console] [info] *** [[ K-PARTIAL-SUMS (TestMainDriver.cxx) ]] *** DONE
